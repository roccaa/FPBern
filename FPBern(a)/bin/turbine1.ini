; epsilon = 53 stands for epsilon = 2^(-53)
[OPTIONS]
name = turbine1
precision = 53
nbvars = 3
nberrors = 17	
[PROGRAM]
function = ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ((((( -0.125 * x3^10) * x2^2) * x1 + (( 0.125 * x3^10) * x2^2)) * x1 + (( 0.125 * x3^10) * x2^2)) * x1 + (( -0.125 * x3^10) * x2^2)) * x1) / (((((x3^8) * x1 + ( -4 * x3^8)) * x1 + ( 6 * x3^8)) * x1 + ( -4 * x3^8)) * x1 + (x3^8) )) * (x4 )) + (( ( (((((( -0.5 * x3^10) * x2^2) * x1 + (( 1.75 * x3^10) * x2^2)) * x1 + (( -1.5 * x3^10) * x2^2)) * x1 + (( - x3^10) * x2^2)) * x1 + (( 2 * x3^10) * x2^2)) * x1 + (( -0.75 * x3^10) * x2^2)) / (((((x3^8) * x1 + ( -4 * x3^8)) * x1 + ( 6 * x3^8)) * x1 + ( -4 * x3^8)) * x1 + (x3^8) )) * (x5 ) )) + (( ( (((((( -0.5 * x3^10) * x2^2) * x1 + (( 1.75 * x3^10) * x2^2 + ( -4 * x3^6))) * x1 + (( -1.5 * x3^10) * x2^2 + ( 16 * x3^6))) * x1 + (( - x3^10) * x2^2 + ( -24 * x3^6))) * x1 + (( 2 * x3^10) * x2^2 + ( 16 * x3^6))) * x1 + (( -0.75 * x3^10) * x2^2 + ( -4 * x3^6))) / (((((x3^8) * x1 + ( -4 * x3^8)) * x1 + ( 6 * x3^8)) * x1 + ( -4 * x3^8)) * x1 + (x3^8) )) * (x6 ) )) + (( ( (((( -2 * x3^6) * x1 + ( 8 * x3^6)) * x1 + ( -12 * x3^6)) * x1 + ( 8 * x3^6)) * x1 + ( -2 * x3^6)) / (((((x3^8) * x1 + ( -4 * x3^8)) * x1 + ( 6 * x3^8)) * x1 + ( -4 * x3^8)) * x1 + (x3^8) )) * (x7 ) )) + (( ( (((( 2 * x3^6) * x1 + ( -8 * x3^6)) * x1 + ( 12 * x3^6)) * x1 + ( -8 * x3^6)) * x1 + ( 2 * x3^6)) / (((((x3^8) * x1 + ( -4 * x3^8)) * x1 + ( 6 * x3^8)) * x1 + ( -4 * x3^8)) * x1 + (x3^8) )) * (x8 ) )) + (( ( ((((( 3 * x3^2 + 2) * x3^6) * x1 + (( -12 * x3^2 -8) * x3^6)) * x1 + (( 18 * x3^2 + 12) * x3^6)) * x1 + (( -12 * x3^2 -8) * x3^6)) * x1 + (( 3 * x3^2 + 2) * x3^6)) / (((((x3^8) * x1 + ( -4 * x3^8)) * x1 + ( 6 * x3^8)) * x1 + ( -4 * x3^8)) * x1 + (x3^8) )) * (x9 ) )) + (( ( ((((( -0.25 * x3^10) * x2^2) * x1 + (( 0.5 * x3^10) * x2^2)) * x1^2 + (( -0.5 * x3^10) * x2^2)) * x1 + (( 0.25 * x3^10) * x2^2)) * x1) / (((((x3^8) * x1 + ( -4 * x3^8)) * x1 + ( 6 * x3^8)) * x1 + ( -4 * x3^8)) * x1 + (x3^8) )) * (x10 ) )) + (( ( (((((( -0.25 * x3^10) * x2^2) * x1 + (( 0.875 * x3^10) * x2^2)) * x1 + (( -0.75 * x3^10) * x2^2)) * x1 + (( -0.5 * x3^10) * x2^2)) * x1 + ((x3^10) * x2^2)) * x1 + (( -0.375 * x3^10) * x2^2)) / (((((x3^8) * x1 + ( -4 * x3^8)) * x1 + ( 6 * x3^8)) * x1 + ( -4 * x3^8)) * x1 + (x3^8) )) * (x11 ) )) + (( ( (((((( -0.25 * x3^10) * x2^2) * x1 + (( 0.875 * x3^10) * x2^2)) * x1 + (( -0.75 * x3^10) * x2^2)) * x1 + (( -0.5 * x3^10) * x2^2)) * x1 + ((x3^10) * x2^2)) * x1 + (( -0.375 * x3^10) * x2^2)) / (((((x3^8) * x1 + ( -4 * x3^8)) * x1 + ( 6 * x3^8)) * x1 + ( -4 * x3^8)) * x1 + (x3^8) )) * (x12 ) )) + (( ( (((((( -0.25 * x3^10) * x2^2) * x1 + (( 0.875 * x3^10) * x2^2)) * x1 + (( -0.75 * x3^10) * x2^2)) * x1 + (( -0.5 * x3^10) * x2^2)) * x1 + ((x3^10) * x2^2)) * x1 + (( -0.375 * x3^10) * x2^2)) / (((((x3^8) * x1 + ( -4 * x3^8)) * x1 + ( 6 * x3^8)) * x1 + ( -4 * x3^8)) * x1 + (x3^8) )) * (x13 ) )) + (( ( (((((( -0.25 * x3^10) * x2^2) * x1 + (( 0.875 * x3^10) * x2^2)) * x1 + (( -0.75 * x3^10) * x2^2)) * x1 + (( -0.5 * x3^10) * x2^2)) * x1 + ((x3^10) * x2^2)) * x1 + (( -0.375 * x3^10) * x2^2)) / (((((x3^8) * x1 + ( -4 * x3^8)) * x1 + ( 6 * x3^8)) * x1 + ( -4 * x3^8)) * x1 + (x3^8) )) * (x14 ) )) + (( ( (((((( -0.25 * x3^10) * x2^2) * x1 + (( 0.875 * x3^10) * x2^2)) * x1 + (( -0.75 * x3^10) * x2^2)) * x1 + (( -0.5 * x3^10) * x2^2)) * x1 + ((x3^10) * x2^2)) * x1 + (( -0.375 * x3^10) * x2^2)) / (((((x3^8) * x1 + ( -4 * x3^8)) * x1 + ( 6 * x3^8)) * x1 + ( -4 * x3^8)) * x1 + (x3^8) )) * (x15 ) )) + (( ( (((((( -0.25 * x3^10) * x2^2) * x1 + (( 0.875 * x3^10) * x2^2)) * x1 + (( -0.75 * x3^10) * x2^2)) * x1 + (( -0.5 * x3^10) * x2^2)) * x1 + ((x3^10) * x2^2)) * x1 + (( -0.375 * x3^10) * x2^2)) / (((((x3^8) * x1 + ( -4 * x3^8)) * x1 + ( 6 * x3^8)) * x1 + ( -4 * x3^8)) * x1 + (x3^8) )) * (x16 ) )) + (( ( (((((( 0.25 * x3^10) * x2^2) * x1 + (( -0.875 * x3^10) * x2^2)) * x1 + (( 0.75 * x3^10) * x2^2)) * x1 + (( 0.5 * x3^10) * x2^2)) * x1 + (( - x3^10) * x2^2)) * x1 + (( 0.375 * x3^10) * x2^2)) / (((((x3^8) * x1 + ( -4 * x3^8)) * x1 + ( 6 * x3^8)) * x1 + ( -4 * x3^8)) * x1 + (x3^8) )) * (x17 ) )) + (( ( (((((( -0.25 * x3^10) * x2^2) * x1 + (( 0.875 * x3^10) * x2^2)) * x1 + (( -0.75 * x3^10) * x2^2)) * x1 + (( -0.5 * x3^10) * x2^2)) * x1 + ((x3^10) * x2^2)) * x1 + (( -0.375 * x3^10) * x2^2)) / (((((x3^8) * x1 + ( -4 * x3^8)) * x1 + ( 6 * x3^8)) * x1 + ( -4 * x3^8)) * x1 + (x3^8) )) * (x18 ) )) + (( ( (((((( -0.25 * x3^10) * x2^2) * x1 + (( 0.875 * x3^10) * x2^2 + (( 3 * x3^2 + 2) * x3^6))) * x1 + (( -0.75 * x3^10) * x2^2 + (( -12 * x3^2 -8) * x3^6))) * x1 + (( -0.5 * x3^10) * x2^2 + (( 18 * x3^2 + 12) * x3^6))) * x1 + ((x3^10) * x2^2 + (( -12 * x3^2 -8) * x3^6))) * x1 + (( -0.375 * x3^10) * x2^2 + (( 3 * x3^2 + 2) * x3^6))) / (((((x3^8) * x1 + ( -4 * x3^8)) * x1 + ( 6 * x3^8)) * x1 + ( -4 * x3^8)) * x1 + (x3^8) )) * (x19 ) )) + (( ( (((((( -0.25 * x3^10) * x2^2) * x1 + ((( 0.875 * x3^10) * x2 + ( -4 * x3^8)) * x2 + (( -1.5 * x3^2 + 2) * x3^6))) * x1 + ((( -0.75 * x3^10) * x2 + ( 16 * x3^8)) * x2 + (( 6 * x3^2 -8) * x3^6))) * x1 + ((( -0.5 * x3^10) * x2 + ( -24 * x3^8)) * x2 + (( -9 * x3^2 + 12) * x3^6))) * x1 + (((x3^10) * x2 + ( 16 * x3^8)) * x2 + (( 6 * x3^2 -8) * x3^6))) * x1 + ((( -0.375 * x3^10) * x2 + ( -4 * x3^8)) * x2 + (( -1.5 * x3^2 + 2) * x3^6))) / (((((x3^8) * x1 + ( -4 * x3^8)) * x1 + ( 6 * x3^8)) * x1 + ( -4 * x3^8)) * x1 + (x3^8) )) * (x20 ) )
input_bl = -4.5,0.4,3.8
input_bu = -0.3,0.9,7.8
